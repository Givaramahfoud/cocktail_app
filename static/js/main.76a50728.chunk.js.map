{"version":3,"sources":["Components/Cocktails.js","Components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Cocktails","title","ingredient","image","className","src","alt","Home","useState","cocktails","setCocktails","search","setSearch","query","setQuery","useEffect","getCocktails","a","fetch","response","json","data","drinks","console","log","id","onSubmit","e","preventDefault","type","name","value","onChange","target","map","cocktail","strDrink","strIngredient1","strIngredient2","strDrinkThumb","idDrink","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAceA,EAXG,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,MACpC,OACI,sBAAKC,UAAU,YAAf,UACI,oBAAIA,UAAU,QAAd,SAAuBH,IACvB,mBAAGG,UAAU,aAAb,SAA2BF,IAC3B,qBAAKE,UAAU,MAAMC,IAAKF,EAAOG,IAAI,SCkDlCC,MAtDf,WAEI,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,WAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACNC,MACD,CAACH,IAGJ,IAAMG,EAAY,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,wDAAD,OAAyDL,IADpE,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBX,EAAaW,EAAKC,QAClBC,QAAQC,IAAIH,GAJK,2CAAH,qDAkBd,OACI,gCACI,sBAAKjB,UAAU,SAAf,UACI,qBAAKqB,GAAG,OAAR,0BACA,uBAAMC,SAXtB,SAAmBC,GACfA,EAAEC,iBACFd,EAASH,GACTC,EAAU,KAQE,UACI,uBAAOR,UAAU,SAASyB,KAAK,OAAOC,KAAK,OAAOC,MAAOpB,EAAQqB,SAhBrF,SAAsBL,GAClBf,EAAUe,EAAEM,OAAOF,UAgBH,wBAAQF,KAAK,SAAb,0BAIR,qBAAKzB,UAAU,YAAf,SACKK,EAAUyB,KAAI,SAAAC,GAAQ,OACnB,cAAC,EAAD,CACIlC,MAAOkC,EAASC,SAChBlC,YAAYiC,EAASE,eAAgBF,EAASG,gBAC9CnC,MAAOgC,EAASI,eACXJ,EAASK,kBCnC3BC,MAVf,WACE,OAEE,qBAAKrC,UAAU,MAAf,SACE,cAAC,EAAD,OCISsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.76a50728.chunk.js","sourcesContent":["import React from 'react'\nimport '../../src/Components/style/cocktails.css';\n\nconst Cocktails = ({ title, ingredient, image }) => {\n    return (\n        <div className='container'>\n            <h1 className='title'>{title}</h1>\n            <p className='ingredient'>{ingredient}</p>\n            <img className='img' src={image} alt='' />\n        </div>\n    )\n}\n\n\nexport default Cocktails","import React, { useEffect, useState } from 'react'\nimport './style/Home.css'\nimport Cocktails from './Cocktails';\n\nfunction Home() {\n\n    const [cocktails, setCocktails] = useState([])\n    const [search, setSearch] = useState('')\n    const [query, setQuery] = useState('Martini')\n\n    useEffect(() => {\n        getCocktails()\n    }, [query])\n\n\n    const getCocktails = async () => {\n        const response = await fetch(`https://thecocktaildb.com/api/json/v1/1/search.php?s=${query}`)\n        const data = await response.json()\n        setCocktails(data.drinks)\n        console.log(data);\n    }\n\n    function updateSearch(e) {\n        setSearch(e.target.value)\n    }\n\n    function getSearch(e) {\n        e.preventDefault()\n        setQuery(search)\n        setSearch('')\n    }\n\n    {\n        return (\n            <div>\n                <div className='sticky'>\n                    <div id='logo'>cocktail App</div>\n                    <form onSubmit={getSearch}>\n                        <input className='search' type=\"text\" name=\"name\" value={search} onChange={updateSearch} />\n                        <button type=\"submit\">Search</button>\n                    </form>\n                </div>\n\n                <div className='cocktails'>\n                    {cocktails.map(cocktail => (\n                        <Cocktails\n                            title={cocktail.strDrink}\n                            ingredient={cocktail.strIngredient1, cocktail.strIngredient2}\n                            image={cocktail.strDrinkThumb}\n                            key={cocktail.idDrink}\n                        />\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home","import React from 'react';\nimport './App.css';\nimport Home from './Components/Home'\n\nfunction App() {\n  return (\n\n    <div className='App'>\n      <Home />\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}